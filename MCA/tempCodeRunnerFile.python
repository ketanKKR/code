def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def rotate_number(num):
    num_str = str(num)
    rotations = [int(num_str[i:] + num_str[:i]) for i in range(len(num_str))]
    return rotations

def is_circular_prime(num):
    rotations = rotate_number(num)
    return all(is_prime(rot) for rot in rotations)

def find_circular_primes(start, end):
    circular_primes = [num for num in range(start, end) if is_circular_prime(num)]
    return circular_primes

# Specify the range
start_range = 100
end_range = 99999

# Find circular primes in the specified range
circular_primes_list = find_circular_primes(start_range, end_range)

# Print the count
print("Number of Circular Primes between {} and {}: {}".format(start_range, end_range, len(circular_primes_list)))
